<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/jms http://www.springframework.org/schema/beans/spring-jms-2.5.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">

	<context:annotation-config/>

    <!-- The IoHandler implementation -->
    <!-- MO-ONLY connection handler -->
    <bean id="moHandler" class="com.enorbus.sms.gw.cmpp.ClientHandler">
        <property name="processor" ref="moProcessor"/>
		<property name="MBeanServer" ref="mBeanServer"/>
    </bean>

    <!-- MO Session counter -->
    <bean id="moSessionCounter" class="com.enorbus.sms.gw.cmpp.util.Counter"/>

    <!-- MT Session counter -->
    <bean id="mtSessionCounter" class="com.enorbus.sms.gw.cmpp.util.Counter"/>    

    <!-- MT-ONLY connection handler -->
    <bean id="mtHandler" class="com.enorbus.sms.gw.cmpp.ClientHandler">
        <property name="processor" ref="mtProcessor"/>
		<property name="MBeanServer" ref="mBeanServer"/>
    </bean>

    <!-- MO-ONLY connector processor -->
    <bean id="moProcessor" class="com.enorbus.sms.gw.cmpp.processor.MoProcessorImpl">
    	<property name="moMessageProducer" ref="moMessageProducer"/>
    	<property name="messageDao" ref="messageDao"/>
    </bean>

    <!-- MT-ONLY connector processor -->
    <bean id="mtProcessor" class="com.enorbus.sms.gw.cmpp.processor.MtProcessorImpl">
    	<property name="messageDao" ref="messageDao"/>
    </bean>

    <!-- the IoFilters -->
    <bean id="executorFilter" class="org.apache.mina.filter.executor.ExecutorFilter">
        <constructor-arg>
            <bean class="java.util.concurrent.Executors" factory-method="newCachedThreadPool"/>
        </constructor-arg>
    </bean>

    <bean id="codecFilter" class="org.apache.mina.filter.codec.ProtocolCodecFilter">
      <constructor-arg>
        <bean class="com.enorbus.sms.gw.cmpp.codec.CmppProtocolCodecFactory" />
      </constructor-arg>
    </bean>

    <bean id="loggingFilter" class="org.apache.mina.filter.logging.LoggingFilter" />
    
    <bean id="bytesLogFilter" class="com.enorbus.sms.gw.cmpp.filter.BytesLogFilter" />

    <!-- The filter chain. -->
    <bean id="filterChainBuilder" class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder">
      <property name="filters">
        <map>
          <!--entry key="bytesLogFilter" value-ref="bytesLogFilter"/-->
          <entry key="codecFilter" value-ref="codecFilter"/>
          <entry key="executor" value-ref="executorFilter"/>        
		  <entry key="loggingFilter" value-ref="loggingFilter"/>		  
        </map>
      </property>
    </bean>

    <!-- The MO-ONLY IoConnector -->
    <bean id="moConnector" class="org.apache.mina.transport.socket.nio.NioSocketConnector" destroy-method="dispose" scope="prototype">
        <property name="handler" ref="moHandler"/>
        <property name="connectTimeoutMillis" value="10000"/>
        <property name="filterChainBuilder" ref="filterChainBuilder"/>
    </bean>

    <!-- The MT-ONLY IoConnector -->
    <bean id="mtConnector" class="org.apache.mina.transport.socket.nio.NioSocketConnector" destroy-method="dispose" scope="prototype">
        <property name="handler" ref="mtHandler"/>
        <property name="connectTimeoutMillis" value="10000"/>
        <property name="filterChainBuilder" ref="filterChainBuilder"/>
    </bean>

    <bean id="client" class="com.enorbus.sms.gw.cmpp.ClientService">
        <property name="moProcessor" ref="moProcessor"/>
        <property name="mtProcessor" ref="mtProcessor"/>
		<property name="MBeanServer" ref="mBeanServer"/>
    </bean>
	
    <bean id="server"
	      class="org.mortbay.jetty.Server" init-method="start" destroy-method="stop">
	    <property name="connectors">
	      <list>
	        <bean id="connector" class="org.mortbay.jetty.nio.SelectChannelConnector">
	          <property name="port" value="9191"/>
	        </bean>
	      </list>
	    </property>
	
	    <property name="handler">
	       <bean id="requestHandler" class="com.enorbus.sms.gw.cmpp.servlet.RequestHandler"/>
	    </property>
	</bean>	

    <!-- JMX stuff. Creates an MBeanServer. -->
    <bean id="mBeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
      <property name="locateExistingServerIfPossible" value="true"/>
    </bean>

    <!-- RmiRegistryFactory -->
	<bean id="registryRmiPort" class="org.springframework.remoting.rmi.RmiRegistryFactoryBean">
        <!--<property name="host" value="192.168.0.32"/>-->
        <property name="port" value="1099"/>
	</bean>

    <bean id="serverConnector" class="org.springframework.jmx.support.ConnectorServerFactoryBean">
        <property name="objectName" value="connector:name=rmi"/>
        <property name="serviceUrl" value="service:jmx:rmi://localhost/jndi/rmi://localhost:1099/myconnector"/>
    </bean>

    <!-- JMX stuff. Creates an MBeanServer. -->
    <bean id="exporter" class="org.springframework.jmx.export.MBeanExporter">
      <property name="beans">
        <map>
          <entry key="cmppgw:name=client">
            <ref local="client"/>
          </entry>
          <entry key="cmppgw:name=moHandler">
            <ref local="moHandler"/>
          </entry>
          <entry key="cmppgw:name=mtHandler">
            <ref local="mtHandler"/>
          </entry>
        </map>
      </property>
      <property name="assembler">
        <bean class="org.springframework.jmx.export.assembler.MethodNameBasedMBeanInfoAssembler">
          <property name="managedMethods" value="stop"/>
        </bean>
      </property>
      <property name="server">
        <ref local="mBeanServer"/>
      </property>
    </bean>
    
    <!-- JMS definitions -->	
	<bean id="moQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg>
			<value>MOQueue</value>
		</constructor-arg>
	</bean>
	
	<bean id="mtQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg>
			<value>MTQueue</value>
		</constructor-arg>
	</bean>	
	
	<bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
        <property name="targetConnectionFactory">
     		<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL">
					<value>tcp://192.168.1.102:61616</value>
				</property>
			</bean>
        </property>
    </bean>
    
    <!-- Custom Message Converter -->
    <bean id="moMessageConverter" class="com.enorbus.sms.gw.cmpp.mq.converter.MoMessageConverter"/>
    
    <bean id="mtMessageConverter" class="org.springframework.jms.support.converter.SimpleMessageConverter"/>
    
   	<bean id="moJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<!--property name="defaultDestinationName" value="MOQueue"/-->
		<property name="defaultDestination" ref="moQueue"/>
		<property name="connectionFactory" ref="connectionFactory"/>
		<property name="messageConverter" ref="moMessageConverter"/>
	</bean>
	
	<bean id="moMessageProducer" class="com.enorbus.sms.gw.cmpp.mq.MoMessageProducer">
		<property name="jmsTemplate" ref="moJmsTemplate"/>
		<property name="queue" ref="moQueue"/>
	</bean>
	
	<!--bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="10" />
		<property name="queueCapacity" value="25" />
	</bean-->
	
	<bean id="senderThreadPool" class="java.util.concurrent.Executors" factory-method="newFixedThreadPool">
		<constructor-arg value="20"/>
	</bean>	
	
	<!--  Message Driven POJO (MDP) -->
	<bean id="mtMessageListener" class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
		<constructor-arg>
			<bean class="com.enorbus.sms.gw.cmpp.mq.MtMessgageConsumer">
				<property name="threadPool" ref="senderThreadPool"/>
				<property name="messageDao" ref="messageDao"/>
			</bean>
		</constructor-arg>
		<!-- custom MessageConverter define -->
		<property name="messageConverter" ref="mtMessageConverter"/>
	</bean>
	
	<!-- Spring MDB Setting -->
	<bean id="mtListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory"/>
		<!-- property name="destinationName" value="MTQueue"/-->
		<property name="destination" ref="mtQueue"/>
		<property name="messageListener" ref="mtMessageListener"/>
		<property name="concurrentConsumers" value="5"/>
		<property name="autoStartup" value="false"/>
	</bean>
</beans>